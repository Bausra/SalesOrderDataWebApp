// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesOrderDataWebApp.Server.DB;

#nullable disable

namespace SalesOrderDataWebApp.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesOrderDataWebApp.Shared.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ElementNo")
                        .HasColumnType("int");

                    b.Property<string>("ElementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("WindowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WindowId");

                    b.ToTable("Elements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ElementNo = 1,
                            ElementType = "Doors",
                            Height = 1850,
                            Width = 1200,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 2,
                            ElementNo = 2,
                            ElementType = "Window",
                            Height = 1850,
                            Width = 800,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 3,
                            ElementNo = 3,
                            ElementType = "Window",
                            Height = 1850,
                            Width = 700,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 4,
                            ElementNo = 1,
                            ElementType = "Window",
                            Height = 2000,
                            Width = 1500,
                            WindowId = 2
                        },
                        new
                        {
                            Id = 5,
                            ElementNo = 1,
                            ElementType = "Doors",
                            Height = 2200,
                            Width = 1400,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 6,
                            ElementNo = 2,
                            ElementType = "Window",
                            Height = 2200,
                            Width = 600,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 7,
                            ElementNo = 1,
                            ElementType = "Window",
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        },
                        new
                        {
                            Id = 8,
                            ElementNo = 1,
                            ElementType = "Window",
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        });
                });

            modelBuilder.Entity("SalesOrderDataWebApp.Shared.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerName = "New York Building 1",
                            State = "NY"
                        },
                        new
                        {
                            Id = 2,
                            BuyerName = "California Hotel AJK",
                            State = "CA"
                        });
                });

            modelBuilder.Entity("SalesOrderDataWebApp.Shared.Models.Window", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("WindowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Windows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Quantity = 4,
                            WindowName = "A51"
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Quantity = 2,
                            WindowName = "C Zone 5"
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            Quantity = 3,
                            WindowName = "GLB"
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            Quantity = 10,
                            WindowName = "OHF"
                        });
                });

            modelBuilder.Entity("SalesOrderDataWebApp.Shared.Models.Element", b =>
                {
                    b.HasOne("SalesOrderDataWebApp.Shared.Models.Window", "Window")
                        .WithMany()
                        .HasForeignKey("WindowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Window");
                });

            modelBuilder.Entity("SalesOrderDataWebApp.Shared.Models.Window", b =>
                {
                    b.HasOne("SalesOrderDataWebApp.Shared.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
